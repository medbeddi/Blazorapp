@page "/editemployee/{id}"
@using Models
@inherits EditEmployeeBase

<h3>Modifier Employé</h3>
<hr />
<EditForm Model="@EditEmployeeModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group row">
        <label for="firstName" class="col-sm-2 col-form-label">First Name</label>
        <div class="col-sm-10">
            <InputText id="firstName" class="form-control" placeholder="First Name"
                       @bind-Value="EditEmployeeModel.FirstName" />
            <ValidationMessage For="@(() => EditEmployeeModel.FirstName)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="lastName" class="col-sm-2 col-form-label">Last Name</label>
        <div class="col-sm-10">
            <InputText id="lastName" class="form-control" placeholder="Last Name"
                       @bind-Value="EditEmployeeModel.LastName" />
            <ValidationMessage For="@(() => EditEmployeeModel.LastName)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="email" class="col-sm-2 col-form-label">Email</label>
        <div class="col-sm-10">
            <InputText id="email" class="form-control" placeholder="Email"
                       @bind-Value="EditEmployeeModel.Email" />
            <ValidationMessage For="@(() => EditEmployeeModel.Email)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="confirmEmail" class="col-sm-2 col-form-label">Confirm Email</label>
        <div class="col-sm-10">
            <InputText id="confirmEmail" class="form-control" placeholder="Confirm Email"
                       @bind-Value="EditEmployeeModel.ConfirmEmail" />
            <ValidationMessage For="@(() => EditEmployeeModel.ConfirmEmail)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="gender" class="col-sm-2 col-form-label">Gender</label>
        <div class="col-sm-10">
            <InputSelect id="gender" @bind-Value="EditEmployeeModel.Gender" class="form-control">
                @foreach (var gender in Enum.GetValues(typeof(Gender)))
                {
                    <option value="@gender">@gender</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => EditEmployeeModel.Gender)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="dateOfBirth" class="col-sm-2 col-form-label">Date of Birth</label>
        <div class="col-sm-10">
            <InputDate id="dateOfBirth" @bind-Value="EditEmployeeModel.DateOfBirth" class="form-control" />
            <ValidationMessage For="@(() => EditEmployeeModel.DateOfBirth)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="department" class="col-sm-2 col-form-label">Department</label>
        <div class="col-sm-10">
            <InputSelect id="department" @bind-Value="EditEmployeeModel.DepartmentId" class="form-control">
                @foreach (var dept in Departments)
                {
                    <option value="@dept.DepartmentId">@dept.DepartmentName</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => EditEmployeeModel.DepartmentId)" />
        </div>
    </div>
    @if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <div class="alert alert-danger">
            @ErrorMessage
        </div>
    }

    <button class="btn btn-primary" type="submit">Submit</button>
</EditForm>
